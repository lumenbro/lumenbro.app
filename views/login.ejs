"""
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <title>Wallet Login</title>
    </head>
    <body>
        <h1>Wallet Login</h1>
        <p>Authenticate with your passkey to establish a session.</p>
        <button onclick="loginWithPasskey()">Login with Passkey</button>
        <p>If you need to recover access (lost device/passkey), <a href="/recovery?orgId={{ org_id }}&email={{ email }}">click here for recovery</a>.</p>
        <script>
            async function base64urlEncode(arr) {
                let str = "";
                const bytes = new Uint8Array(arr);
                for (let i = 0; i < bytes.byteLength; i++) {
                    str += String.fromCharCode(bytes[i]);
                }
                return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');
            }

            async function loginWithPasskey() {
                try {
                    const challenge = crypto.getRandomValues(new Uint8Array(32));  // Server should provide challenge
                    const publicKeyCredentialGetOptions = {
                        challenge: challenge,
                        rpId: window.location.hostname,
                        userVerification: "preferred",
                        timeout: 60000
                    };

                    const credential = await navigator.credentials.get({
                        publicKey: publicKeyCredentialGetOptions
                    });

                    const encodedChallenge = base64urlEncode(challenge);

                    const assertion = {
                        credentialId: credential.id,
                        authenticatorData: base64urlEncode(credential.response.authenticatorData),
                        clientDataJson: base64urlEncode(credential.response.clientDataJSON),
                        signature: base64urlEncode(credential.response.signature),
                        userHandle: base64urlEncode(credential.response.userHandle)
                    };

                    const response = await fetch('/login-auth', {  // New endpoint for assertion
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ 
                            orgId: '{{ org_id }}',
                            challenge: encodedChallenge, 
                            assertion: assertion 
                        })
                    });
                    const text = await response.text();
                    let data;
                    try {
                        data = JSON.parse(text);
                    } catch (e) {
                        alert("Server error: " + text);
                        return;
                    }
                    if (data.success) {
                        alert("Login successful! Session established.");
                    } else {
                        alert("Error: " + data.error);
                    }
                } catch (error) {
                    console.error("Error during login:", error);
                    alert("Failed to login: " + error.message);
                }
            }
        </script>
    </body>
    </html>
    """
